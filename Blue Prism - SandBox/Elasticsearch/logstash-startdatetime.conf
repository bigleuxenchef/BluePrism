
input {

   jdbc {
    jdbc_driver_library => "${JDBC_DRIVER_LIBRARY}"
    jdbc_driver_class => "${JDBC_DRIVER_CLASS}"
    jdbc_connection_string => "jdbc:sqlserver://${SQLSERVERHOSTNAME}:${SQLSERVERPORT};instance=${SQLSERVERINSTANCE};databaseName=${BLUEPRISMDB};integratedSecurity=true;useTicketCache=true;doNotPrompt=true;"
	#clean_run => true
	last_run_metadata_path => "${LOGSTASH_HOME}\.testlogstash_jdbc_last_run"
	jdbc_user => "${JDBC_USER}"
	#jdbc_password => "*******"
      	schedule => "0 0-59 0-23 * * *"
	tracking_column => "processenddatetime"
	tracking_column_type => "timestamp"
jdbc_default_timezone => "America/Toronto"
statement => "select L.*, S.starterresourcename,S.starterusername,S.runningresourcename, S.runningosusername,S.startdatetime as 'processstartdatetime',S.enddatetime as 'processenddatetime',S.processname as 'processprocessname',
 datediff(ms, L.startdatetime,L.enddatetime)/1000.0 as 'duration',datediff(ms, S.startdatetime,S.enddatetime)/1000.0 as 'processduration' 
 from BPASessionLog_NonUnicode L join BPVSessioninfo S on S.sessionnumber = L.sessionnumber
where S.enddatetime > :sql_last_value and S.enddatetime is not null"
 
	jdbc_paging_enabled => "true"
    jdbc_page_size => "50000"
    type => "test.bp.process.completed"
  }
  

}
filter {

if [type] =~ /test.bp.process.completed/
{
grok
{
  #match => ["startdatetime", "(?<[@metadata][filedate]>YYYY-MM-dd)*$"]
  match => ["startdatetime", "%{DATE:[@metadata][filedate]}"]
  
}
}}
output {
if [type] =~ /test./
{
    elasticsearch { 
	hosts => "http://${ELKMASTERHOSTNAME}:${ELKMASTERPORT}"
	index => "%{type}-%{[@metadata][filedate]}"
	document_id => "%{sessionnumber}-%{seqnum}"
	doc_as_upsert => "true"
    }
}


# display to the console any of the output stream, this can be commented for performance reason
	
  stdout { codec => rubydebug }
}

